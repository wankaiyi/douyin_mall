// idl/hello/hello.proto
syntax = "proto3";

package api.user;

option go_package = "api/user";

import "api.proto";
//import "common.proto";

message LoginRequest {
  string email = 1 [(api.form) = "email"];
  string password = 2 [(api.form) = "password"];
}
message LoginResponse {
  int32 status_code = 1[(api.go_tag)='json:"status_code"']; // 0-success, other values-failure
  string status_msg = 2;
  string access_token = 3;
  string refresh_token = 4;
}

message RegisterRequest {
  string email = 1 [(api.form)= "email"];
  string password = 2 [(api.form)= "password"];
  string confirm_password = 3 [(api.form)= "confirm_password"];
//  string description = 3 [(api.form)= "description"];
//  int32 sex = 4 [(api.form)= "sex"];
//  string avatar = 5 [(api.form)= "avatar"];
}

message RegisterResponse {
  int32 status_code = 1[(api.go_tag)='json:"status_code"']; // 0-success, other values-failure
  string status_msg = 2;
}

message GetUserInfoResponse {
  int32 status_code = 1[(api.go_tag)='json:"status_code"'];
  string status_msg = 2;
  string email = 3;
//  string username = 3;
//  int32 sex = 4;
//  string description = 5;
//  string avatar = 6;
}

message Empty {}

service UserService {

  rpc Login(LoginRequest) returns (LoginResponse) {
    option (api.post) = "/user/login";
  }

  rpc Register(RegisterRequest) returns (RegisterResponse) {
    option (api.post) = "/user/register";
  }

  rpc GetUserInfo(Empty) returns (GetUserInfoResponse) {
    option (api.get) = "/user/info";
  }

  rpc RefreshToken(Empty) returns (LoginResponse) {
    option (api.post) = "/user/refresh_token";
  }
}