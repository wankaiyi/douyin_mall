// idl/hello/hello.proto
syntax = "proto3";

package api.cart;

option go_package = "api/order";

import "api.proto";
//import "common.proto";

message Cart {
  int64 id = 1;
  int64 userId = 2;
  int64 productIds = 3;
  string quantity = 4;
  string price = 5;
  string total = 6;
  int32 isDeleted = 7;
}

message CartRequest {
  int64 cartId = 1 [(api.form) = "cartId"];
}

message CartResponse {
  int32 status_code = 1[(api.go_tag) = 'json:"status_code"'];
  string status_msg = 2;
  repeated Cart carts = 3;//定义订单数组
}

message CartInsertRequest {
  int64 id = 1 [(api.form) = "id"];
  int64 userId = 2 [(api.form) = "userId"];
  int64 productIds = 3 [(api.form) = "productIds"];
  string quantity = 4 [(api.form) = "quantity"];
  string price = 5 [(api.form) = "price"];
  string total = 6 [(api.form) = "total"];
  int32 isDeleted = 7 [(api.form) = "isDeleted"];
}

message CartInsertResponse {
  int32 status_code = 1[(api.go_tag) = 'json:"status_code"'];
  string status_msg = 2;
}

message CartSelectRequest {
  int64 id = 1;
}

message CartSelectResponse {
  int32 status_code = 1[(api.go_tag) = 'json:"status_code"'];
  string status_msg = 2;
  Cart cart = 3;
}

message CartDeleteRequest {
  int64 id = 1;
}

message CartDeleteResponse {
  int32 status_code = 1[(api.go_tag) = 'json:"status_code"'];
  string status_msg = 2;
}

message CartUpdateRequest {
  int64 id = 1 [(api.form) = "id"];
  int64 userId = 2 [(api.form) = "userId"];
  int64 productIds = 3 [(api.form) = "productIds"];
  string quantity = 4 [(api.form) = "quantity"];
  string price = 5 [(api.form) = "price"];
  string total = 6 [(api.form) = "total"];
  int32 isDeleted = 7 [(api.form) = "isDeleted"];
}

message CartUpdateResponse {
  int32 status_code = 1[(api.go_tag) = 'json:"status_code"'];
  string status_msg = 2;
}
service CartService {

  rpc Search(CartRequest) returns (CartResponse) {
    option (api.post) = "/cart/search";
  }

  rpc CartInsert(CartInsertRequest) returns (CartInsertResponse) {
    option (api.post) = "/cart/insert";
  }

  rpc CartSelect(CartSelectRequest) returns (CartSelectResponse) {
    option (api.post) = "/cart/select";
  }

  rpc CartDelete(CartDeleteRequest) returns (CartDeleteResponse) {
    option (api.post) = "/cart/delete";
  }

  rpc CartUpdate(CartUpdateRequest) returns (CartUpdateResponse) {
    option (api.post) = "/cart/update";
  }
}