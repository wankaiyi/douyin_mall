// idl/hello/hello.proto
syntax = "proto3";

package api.order;

option go_package = "api/order";

import "api.proto";
//import "common.proto";

message Order {
  int64 id = 1;
  int64 productId = 2;
  int64 userId = 3;
  int64 deliveryId = 4;
  string quantity = 5;
  string price = 6;
  string description = 7;
  int32 status = 8;
}

message OrderRequest {
  int64 orderId = 1 [(api.form) = "orderId"];
}

message OrderResponse {
  int32 status_code = 1[(api.go_tag) = 'json:"status_code"'];
  string status_msg = 2;
  repeated Order orders = 3;//定义订单数组
}

message OrderInsertRequest {
  int64 id = 1 [(api.form) = "id"];
  int64 productId = 2 [(api.form) = "productId"];
  int64 userId = 3 [(api.form) = "userId"];
  int64 deliveryId = 4 [(api.form) = "deliveryId"];
  string quantity = 5 [(api.form) = "quantity"];
  string price = 6 [(api.form) = "price"];
  string description = 7 [(api.form) = "description"];
  int32 status = 8 [(api.form) = "status"];
}

message OrderInsertResponse {
  int32 status_code = 1[(api.go_tag) = 'json:"status_code"'];
  string status_msg = 2;
}

message OrderSelectRequest {
}

message OrderSelectResponse {
  int32 status_code = 1[(api.go_tag) = 'json:"status_code"'];
  string status_msg = 2;
  Order order = 3;
}

message OrderDeleteRequest {
  int64 id = 1;
}

message OrderDeleteResponse {
  int32 status_code = 1[(api.go_tag) = 'json:"status_code"'];
  string status_msg = 2;
}

message OrderUpdateRequest {
  int64 id = 1 [(api.form) = "id"];
  int64 productId = 2 [(api.form) = "productId"];
  int64 userId = 3 [(api.form) = "userId"];
  int64 deliveryId = 4 [(api.form) = "deliveryId"];
  string quantity = 5 [(api.form) = "quantity"];
  string price = 6 [(api.form) = "price"];
  string description = 7 [(api.form) = "description"];
  int32 status = 8 [(api.form) = "status"];
}

message OrderUpdateResponse {
  int32 status_code = 1[(api.go_tag) = 'json:"status_code"'];
  string status_msg = 2;
}
service OrderService {

  rpc OrderInsert(OrderInsertRequest) returns (OrderInsertResponse) {
    option (api.post) = "/order/insert";
  }

  rpc OrderSelect(OrderSelectRequest) returns (OrderSelectResponse) {
    option (api.post) = "/order/select";
  }

  rpc OrderDelete(OrderDeleteRequest) returns (OrderDeleteResponse) {
    option (api.post) = "/order/delete";
  }

  rpc OrderUpdate(OrderUpdateRequest) returns (OrderUpdateResponse) {
    option (api.post) = "/order/update";
  }
}